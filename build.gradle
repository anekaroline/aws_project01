plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.palantir.docker' version '0.36.0'
}

group = 'anekaroline'
version = '1.0.14'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
	maven {url 'https://repo.spring.io/milestone'}
	maven {url 'https://repo.spring.io/snapshot'}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.4.1'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-sns', version: '1.12.771'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-sqs', version: '1.12.771'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.772'
	implementation group: 'com.amazonaws', name: 'amazon-sqs-java-messaging-lib', version: '2.1.3'
	implementation group: 'org.springframework', name: 'spring-jms', version: '6.1.12'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.register('unpack', Copy){
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}

docker {
	name "${project.group}/${project.name}"
	buildx true
	platform 'linux/amd64'
	copySpec.from(tasks.unpack.outputs).into('dependency')
	buildArgs(['DEPENDENCY' : "dependency"])
}

tasks.named('test') {
	useJUnitPlatform()
}
